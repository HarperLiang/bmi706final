# -*- coding: utf-8 -*-
"""706final-test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SDs0OUd01Sx0AwapCG2yDaKkquur_SBp
"""

import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import pandas as pd

df = pd.read_csv('life_expectancy_clean.csv')

app = dash.Dash(__name__)
default_countries = df['Country'].unique()[:10]

app.layout = html.Div([
    dcc.Dropdown(
        id='country-dropdown',
        options=[{'label': i, 'value': i} for i in df['Country'].unique()],
        value=default_countries,
        multi=True,
        style={'width': '50%'}
    ),
    dcc.Graph(id='life-exp-mortality-plot'),
    dcc.Graph(id='disease-heatmap'),
])

@app.callback(
    [Output('life-exp-mortality-plot', 'figure'),
     Output('disease-heatmap', 'figure')],
    [Input('country-dropdown', 'value')]
)
def update_figures(selected_countries):
    filtered_df = df[df['Country'].isin(selected_countries)]
    data_grouped = filtered_df.groupby(['Year', 'Status']).mean().unstack()

    # Plot for Adult Mortality and Life Expectancy
    fig_bar = make_subplots(specs=[[{"secondary_y": True}]])

    colors = {
        'Developed': '#1f77b4',  # Blue-like color for Developed
        'Developing': '#ff7f0e',  # Orange-like color for Developing
    }

    for status in data_grouped['Adult Mortality'].columns:
        fig_bar.add_trace(go.Bar(x=data_grouped.index, y=data_grouped['Adult Mortality'][status], name=f'Adult Mortality - {status}', marker_color=colors[status]), secondary_y=False)

    for status in data_grouped['Life expectancy'].columns:
        fig_bar.add_trace(go.Scatter(x=data_grouped.index, y=data_grouped['Life expectancy'][status], name=f'Life Expectancy - {status}', mode='lines+markers', line=dict(color=colors[status], dash='dash')), secondary_y=True)

    fig_bar.update_layout(title_text="Adult Mortality Rate and Life Expectancy over Years by Status", xaxis_title="Year", template="plotly_white")
    fig_bar.update_yaxes(title_text="Adult Mortality Rate", secondary_y=False)
    fig_bar.update_yaxes(title_text="Life Expectancy", secondary_y=True)

    # Heatmap for disease metrics
    diseases = ['Hepatitis B', 'Polio', 'Diphtheria']
    disease_data = filtered_df.groupby('Country')[diseases].mean()
    fig_heatmap = go.Figure(data=go.Heatmap(
        z=disease_data.values,
        x=diseases,
        y=disease_data.index,
        colorscale='Viridis'
    ))
    fig_heatmap.update_layout(title='Immunization Coverage among 1-year-olds (%) by Country', xaxis_title='Disease Immunization', yaxis_title='Country')

    return fig_bar, fig_heatmap

if __name__ == '__main__':
    app.run_server(debug=True)
